package com.tacos.web;

import com.tacos.Ingredients;
import com.tacos.TacoOrder;
import com.tacos.Tacos;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.SessionAttributes;

import java.util.Arrays;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

@Slf4j
@Controller
@RequestMapping("/design")
@SessionAttributes("tacoOrder")
public class DesignTacoController {

    @ModelAttribute("ingredients")
    public List<Ingredients> ingredients() {
        List<Ingredients> ingredients = Arrays.asList(
                new Ingredients("FLTO", "Flour Tortilla", Ingredients.Type.WRAP),
                new Ingredients("COTO", "Corn Tortilla", Ingredients.Type.WRAP),
                new Ingredients("GRBF", "Ground Beef", Ingredients.Type.PROTEIN),
                new Ingredients("CARN", "Carnitas", Ingredients.Type.PROTEIN),
                new Ingredients("TMTO", "Diced Tomatoes", Ingredients.Type.VEGGIES),
                new Ingredients("LETC", "Lettuce", Ingredients.Type.VEGGIES),
                new Ingredients("CHED", "Cheddar", Ingredients.Type.CHEESE),
                new Ingredients("JACK", "Monterrey Jack", Ingredients.Type.CHEESE),
                new Ingredients("SLSA", "Salsa", Ingredients.Type.SAUCE),
                new Ingredients("SRCR", "Sour Cream", Ingredients.Type.SAUCE)
        );
        return ingredients;
    }

    @ModelAttribute
    public void addIngredientsByType(Model model) {
        Map<String, List<Ingredients>> ingredientsByType = ingredients().stream()
                .collect(Collectors.groupingBy(ingredient -> ingredient.getType().toString().toLowerCase()));
        ingredientsByType.forEach((key, value) -> model.addAttribute(key, value));
    }

    @ModelAttribute("tacoOrder")
    public TacoOrder tacoOrder() {
        return new TacoOrder();
    }

    @ModelAttribute("tacos")
    public Tacos tacos() {
        return new Tacos();
    }

    @GetMapping
    public String showDesignForm(Model model) {
        return "design";
    }
}
